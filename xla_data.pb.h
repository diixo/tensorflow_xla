// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xla_data.proto

#ifndef PROTOBUF_xla_5fdata_2eproto__INCLUDED
#define PROTOBUF_xla_5fdata_2eproto__INCLUDED

#include <string>

#include "base.h"
#include "types.h"


//#define GOOGLE_PREDICT_FALSE(x) x

//#define GOOGLE_PREDICT_TRUE(x) x

//#include "google/common.h"

//#include <google/protobuf/io/coded_stream.h>

#include "google/google_repeated_field.h"

//#include "google/arena.h"


#include "google/google_arenastring.h"

//#include <google/protobuf/generated_message_table_driven.h>
#include "google/google_generated_message_util.h"
//#include <google/protobuf/metadata.h>
//#include <google/protobuf/message.h>
//#include "google/repeated_field.h"  // IWYU pragma: export
//#include <google/protobuf/extension_set.h>  // IWYU pragma: export
//#include <google/protobuf/generated_enum_reflection.h>
//#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace xla {

class ComputationDataHandle;
class ComputationDataHandleDefaultTypeInternal;
extern ComputationDataHandleDefaultTypeInternal _ComputationDataHandle_default_instance_;
class ComputationHandle;
class ComputationHandleDefaultTypeInternal;
extern ComputationHandleDefaultTypeInternal _ComputationHandle_default_instance_;

class ConvolutionDimensionNumbers;
class ConvolutionDimensionNumbersDefaultTypeInternal;
extern ConvolutionDimensionNumbersDefaultTypeInternal _ConvolutionDimensionNumbers_default_instance_;

//class ExecutionHandle;
//class ExecutionHandleDefaultTypeInternal;
//extern ExecutionHandleDefaultTypeInternal _ExecutionHandle_default_instance_;

class GlobalDataHandle;
class GlobalDataHandleDefaultTypeInternal;
extern GlobalDataHandleDefaultTypeInternal _GlobalDataHandle_default_instance_;

class Layout;
class LayoutDefaultTypeInternal;
extern LayoutDefaultTypeInternal _Layout_default_instance_;
class Literal;
class LiteralDefaultTypeInternal;
extern LiteralDefaultTypeInternal _Literal_default_instance_;
class PaddingConfig;
class PaddingConfigDefaultTypeInternal;
extern PaddingConfigDefaultTypeInternal _PaddingConfig_default_instance_;
class PaddingConfig_PaddingConfigDimension;
class PaddingConfig_PaddingConfigDimensionDefaultTypeInternal;
extern PaddingConfig_PaddingConfigDimensionDefaultTypeInternal _PaddingConfig_PaddingConfigDimension_default_instance_;
class ParameterRequest;
class ParameterRequestDefaultTypeInternal;
extern ParameterRequestDefaultTypeInternal _ParameterRequest_default_instance_;
class ProgramShape;
class ProgramShapeDefaultTypeInternal;
extern ProgramShapeDefaultTypeInternal _ProgramShape_default_instance_;

class Shape;
class ShapeDefaultTypeInternal;
extern ShapeDefaultTypeInternal _Shape_default_instance_;

class Window;
class WindowDefaultTypeInternal;
extern WindowDefaultTypeInternal _Window_default_instance_;
class WindowDimension;
class WindowDimensionDefaultTypeInternal;
extern WindowDimensionDefaultTypeInternal _WindowDimension_default_instance_;
}  // namespace xla

namespace xla {

/*
namespace protobuf_xla_5fdata_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const tensorflow::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_xla_5fdata_2eproto
*/

enum PrimitiveType {
  PRIMITIVE_TYPE_INVALID = 0,
  PRED = 1,
  S8 = 2,
  S16 = 3,
  S32 = 4,
  S64 = 5,
  U8 = 6,
  U16 = 7,
  U32 = 8,
  U64 = 9,
  F16 = 10,
  F32 = 11,
  F64 = 12,
  TUPLE = 13,
  OPAQUE = 14,
  PrimitiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  PrimitiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};

bool PrimitiveType_IsValid(int value);
const PrimitiveType PrimitiveType_MIN = PRIMITIVE_TYPE_INVALID;
const PrimitiveType PrimitiveType_MAX = OPAQUE;
const int PrimitiveType_ARRAYSIZE = PrimitiveType_MAX + 1;

//const ::google::protobuf::EnumDescriptor* PrimitiveType_descriptor();
//inline const ::std::string& PrimitiveType_Name(PrimitiveType value) {
//  return ::google::protobuf::internal::NameOfEnum(
//    PrimitiveType_descriptor(), value);
//}
//inline bool PrimitiveType_Parse(
//    const ::std::string& name, PrimitiveType* value) {
//  return ::google::protobuf::internal::ParseNamedEnum<PrimitiveType>(
//    PrimitiveType_descriptor(), name, value);
//}

enum PaddingValue {
  INVALID_PAD = 0,
  ZERO_PAD = 1,
  ONE_PAD = 2,
  LOWEST_PAD = 3,
  HIGHEST_PAD = 4,
  UNKNOWN_PAD = 5,
  PaddingValue_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  PaddingValue_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};
bool PaddingValue_IsValid(int value);
const PaddingValue PaddingValue_MIN = INVALID_PAD;
const PaddingValue PaddingValue_MAX = UNKNOWN_PAD;
const int PaddingValue_ARRAYSIZE = PaddingValue_MAX + 1;
//
//const ::google::protobuf::EnumDescriptor* PaddingValue_descriptor();
//inline const ::std::string& PaddingValue_Name(PaddingValue value) {
//  return ::google::protobuf::internal::NameOfEnum(
//    PaddingValue_descriptor(), value);
//}
//inline bool PaddingValue_Parse(
//    const ::std::string& name, PaddingValue* value) {
//  return ::google::protobuf::internal::ParseNamedEnum<PaddingValue>(
//    PaddingValue_descriptor(), name, value);
//}

enum UnaryOperation {
  UNOP_INVALID = 0,
  UNOP_LOGICAL_NOT = 1,
  UNOP_EXP = 2,
  UNOP_NEGATE = 3,
  UNOP_SORT = 4,
  UNOP_TANH = 5,
  UNOP_LOG = 6,
  UNOP_FLOOR = 7,
  UNOP_CEIL = 8,
  UNOP_ABS = 9,
  UNOP_SIGN = 10,
  UnaryOperation_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  UnaryOperation_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};
bool UnaryOperation_IsValid(int value);
const UnaryOperation UnaryOperation_MIN = UNOP_INVALID;
const UnaryOperation UnaryOperation_MAX = UNOP_SIGN;
const int UnaryOperation_ARRAYSIZE = UnaryOperation_MAX + 1;

//const ::google::protobuf::EnumDescriptor* UnaryOperation_descriptor();
//inline const ::std::string& UnaryOperation_Name(UnaryOperation value) {
//  return ::google::protobuf::internal::NameOfEnum(
//    UnaryOperation_descriptor(), value);
//}
//inline bool UnaryOperation_Parse(
//    const ::std::string& name, UnaryOperation* value) {
//  return ::google::protobuf::internal::ParseNamedEnum<UnaryOperation>(
//    UnaryOperation_descriptor(), name, value);
//}
enum BinaryOperation {
  BINOP_INVALID = 0,
  BINOP_ADD = 1,
  BINOP_DIV = 2,
  BINOP_MUL = 3,
  BINOP_SUB = 4,
  BINOP_EQ = 5,
  BINOP_GE = 6,
  BINOP_GT = 7,
  BINOP_LE = 8,
  BINOP_LT = 9,
  BINOP_NE = 10,
  BINOP_DOT = 12,
  BINOP_INDEX = 13,
  BINOP_MAX = 14,
  BINOP_MIN = 15,
  BINOP_POW = 16,
  BINOP_REM = 17,
  BINOP_LOGICAL_AND = 18,
  BINOP_LOGICAL_OR = 19,
  BinaryOperation_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  BinaryOperation_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};
bool BinaryOperation_IsValid(int value);
const BinaryOperation BinaryOperation_MIN = BINOP_INVALID;
const BinaryOperation BinaryOperation_MAX = BINOP_LOGICAL_OR;
const int BinaryOperation_ARRAYSIZE = BinaryOperation_MAX + 1;
//

enum RandomDistribution {
  RNG_INVALID = 0,
  RNG_UNIFORM = 1,
  RNG_NORMAL = 2,
  RNG_BERNOULLI = 3,
  RandomDistribution_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  RandomDistribution_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};
bool RandomDistribution_IsValid(int value);
const RandomDistribution RandomDistribution_MIN = RNG_INVALID;
const RandomDistribution RandomDistribution_MAX = RNG_BERNOULLI;
const int RandomDistribution_ARRAYSIZE = RandomDistribution_MAX + 1;


enum TernaryOperation {
  TRIOP_INVALID = 0,
  TRIOP_SELECT = 1,
  TRIOP_UPDATE = 2,
  TRIOP_CLAMP = 3,
  TernaryOperation_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  TernaryOperation_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};
bool TernaryOperation_IsValid(int value);
const TernaryOperation TernaryOperation_MIN = TRIOP_INVALID;
const TernaryOperation TernaryOperation_MAX = TRIOP_CLAMP;
const int TernaryOperation_ARRAYSIZE = TernaryOperation_MAX + 1;


enum VariadicOperation {
  VAROP_INVALID = 0,
  VAROP_TUPLE = 1,
  VariadicOperation_INT_MIN_SENTINEL_DO_NOT_USE_ = tensorflow::kint32min,
  VariadicOperation_INT_MAX_SENTINEL_DO_NOT_USE_ = tensorflow::kint32max
};
bool VariadicOperation_IsValid(int value);
const VariadicOperation VariadicOperation_MIN = VAROP_INVALID;
const VariadicOperation VariadicOperation_MAX = VAROP_TUPLE;
const int VariadicOperation_ARRAYSIZE = VariadicOperation_MAX + 1;
//
//const ::google::protobuf::EnumDescriptor* VariadicOperation_descriptor();
//inline const ::std::string& VariadicOperation_Name(VariadicOperation value) {
//  return ::google::protobuf::internal::NameOfEnum(
//    VariadicOperation_descriptor(), value);
//}
//inline bool VariadicOperation_Parse(
//    const ::std::string& name, VariadicOperation* value) {
//  return ::google::protobuf::internal::ParseNamedEnum<VariadicOperation>(
//    VariadicOperation_descriptor(), name, value);
//}
// ===================================================================

class PaddingConfig_PaddingConfigDimension 
{
 public:
  PaddingConfig_PaddingConfigDimension();
  virtual ~PaddingConfig_PaddingConfigDimension();

  PaddingConfig_PaddingConfigDimension(const PaddingConfig_PaddingConfigDimension& from);

  inline PaddingConfig_PaddingConfigDimension& operator=(const PaddingConfig_PaddingConfigDimension& from) 
  {
    CopyFrom(from);
    return *this;
  }

  //static const ::google::protobuf::Descriptor* descriptor();
  static const PaddingConfig_PaddingConfigDimension& default_instance();

  static inline const PaddingConfig_PaddingConfigDimension* internal_default_instance() {
    return reinterpret_cast<const PaddingConfig_PaddingConfigDimension*>(
               &_PaddingConfig_PaddingConfigDimension_default_instance_);
  }
  //static PROTOBUF_CONSTEXPR int const kIndexInFileMessages = 0;

  void Swap(PaddingConfig_PaddingConfigDimension* other);

  // implements Message ----------------------------------------------

  inline PaddingConfig_PaddingConfigDimension* New() const PROTOBUF_FINAL { return New(NULL); }

  PaddingConfig_PaddingConfigDimension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  //void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  //void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PaddingConfig_PaddingConfigDimension& from);
  void MergeFrom(const PaddingConfig_PaddingConfigDimension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  //bool MergePartialFromCodedStream(
  //    ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  //void SerializeWithCachedSizes(
  //    ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  //::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
  //    bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PaddingConfig_PaddingConfigDimension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  //::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 edge_padding_low = 1;
  void clear_edge_padding_low();
  //static const int kEdgePaddingLowFieldNumber = 1;
  ::google::protobuf::int64 edge_padding_low() const;
  void set_edge_padding_low(::google::protobuf::int64 value);

  // int64 edge_padding_high = 2;
  void clear_edge_padding_high();
  //static const int kEdgePaddingHighFieldNumber = 2;
  ::google::protobuf::int64 edge_padding_high() const;
  void set_edge_padding_high(::google::protobuf::int64 value);

  // int64 interior_padding = 3;
  void clear_interior_padding();
  //static const int kInteriorPaddingFieldNumber = 3;
  ::google::protobuf::int64 interior_padding() const;
  void set_interior_padding(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:xla.PaddingConfig.PaddingConfigDimension)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 edge_padding_low_;
  ::google::protobuf::int64 edge_padding_high_;
  ::google::protobuf::int64 interior_padding_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PaddingConfig
{
 public:
  PaddingConfig();
  virtual ~PaddingConfig();

  PaddingConfig(const PaddingConfig& from);

  inline PaddingConfig& operator=(const PaddingConfig& from)
  {
    CopyFrom(from);
    return *this;
  }

  //static const ::google::protobuf::Descriptor* descriptor();
  static const PaddingConfig& default_instance();

  static inline const PaddingConfig* internal_default_instance()
  {
    return reinterpret_cast<const PaddingConfig*>(
               &_PaddingConfig_default_instance_);
  }

  void Swap(PaddingConfig* other);

  // implements Message ----------------------------------------------

  inline PaddingConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  PaddingConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PaddingConfig& from);
  void MergeFrom(const PaddingConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;
  //bool MergePartialFromCodedStream(
  //    ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  //void SerializeWithCachedSizes(
  //    ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  //::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
  //    bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PaddingConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  //::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PaddingConfig_PaddingConfigDimension PaddingConfigDimension;

  // accessors -------------------------------------------------------

  // repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
  int dimensions_size() const;
  void clear_dimensions();

  const ::xla::PaddingConfig_PaddingConfigDimension& dimensions(int index) const;
  ::xla::PaddingConfig_PaddingConfigDimension* mutable_dimensions(int index);
  ::xla::PaddingConfig_PaddingConfigDimension* add_dimensions();
  ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >*
      mutable_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >&
      dimensions() const;

  // @@protoc_insertion_point(class_scope:xla.PaddingConfig)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension > dimensions_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};


class Layout
{
 public:
  Layout();
  virtual ~Layout();

  Layout(const Layout& from);

  inline Layout& operator=(const Layout& from) {
    CopyFrom(from);
    return *this;
  }

  static const Layout& default_instance();

  static inline const Layout* internal_default_instance() {
     return reinterpret_cast<const Layout*>(
        &_Layout_default_instance_);
  }


  void Swap(Layout* other);

  // implements Message ----------------------------------------------

  inline Layout* New() const PROTOBUF_FINAL { return New(NULL); }

  Layout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const Layout& from);
  void MergeFrom(const Layout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Layout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 minor_to_major = 1;
  int minor_to_major_size() const;
  void clear_minor_to_major();
  static const int kMinorToMajorFieldNumber = 1;
  tensorflow::int64 minor_to_major(int index) const;
  void set_minor_to_major(int index, tensorflow::int64 value);
  void add_minor_to_major(tensorflow::int64 value);
  const ::google::protobuf::RepeatedField< tensorflow::int64 >&
      minor_to_major() const;
  ::google::protobuf::RepeatedField< tensorflow::int64 >*
      mutable_minor_to_major();

  // repeated int64 padded_dimensions = 2;
  int padded_dimensions_size() const;
  void clear_padded_dimensions();
  static const int kPaddedDimensionsFieldNumber = 2;
  tensorflow::int64 padded_dimensions(int index) const;
  void set_padded_dimensions(int index, tensorflow::int64 value);
  void add_padded_dimensions(tensorflow::int64 value);
  const ::google::protobuf::RepeatedField< tensorflow::int64 >&
      padded_dimensions() const;
  ::google::protobuf::RepeatedField< tensorflow::int64 >*
      mutable_padded_dimensions();

  // .xla.PaddingValue padding_value = 3;
  void clear_padding_value();
  static const int kPaddingValueFieldNumber = 3;
  ::xla::PaddingValue padding_value() const;
  void set_padding_value(::xla::PaddingValue value);

  // @@protoc_insertion_point(class_scope:xla.Layout)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< tensorflow::int64 > minor_to_major_;
  mutable int _minor_to_major_cached_byte_size_;
  ::google::protobuf::RepeatedField< tensorflow::int64 > padded_dimensions_;
  mutable int _padded_dimensions_cached_byte_size_;
  int padding_value_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Shape
{
 public:
  Shape();
  virtual ~Shape();

  Shape(const Shape& from);

  inline Shape& operator=(const Shape& from) {
    CopyFrom(from);
    return *this;
  }

  static const Shape& default_instance();

  static inline const Shape* internal_default_instance() {
    return reinterpret_cast<const Shape*>(
               &_Shape_default_instance_);
  }

  void Swap(Shape* other);

  // implements Message ----------------------------------------------

  inline Shape* New() const PROTOBUF_FINAL { return New(NULL); }

  Shape* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const Shape& from);
  void MergeFrom(const Shape& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shape* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 dimensions = 3;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 3;
  tensorflow::int64 dimensions(int index) const;
  void set_dimensions(int index, tensorflow::int64 value);
  void add_dimensions(tensorflow::int64 value);
  const ::google::protobuf::RepeatedField< tensorflow::int64 >&
      dimensions() const;
  ::google::protobuf::RepeatedField< tensorflow::int64 >*
      mutable_dimensions();

  // repeated .xla.Shape tuple_shapes = 4;
  int tuple_shapes_size() const;
  void clear_tuple_shapes();
  static const int kTupleShapesFieldNumber = 4;
  const ::xla::Shape& tuple_shapes(int index) const;
  ::xla::Shape* mutable_tuple_shapes(int index);
  ::xla::Shape* add_tuple_shapes();
  ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
      mutable_tuple_shapes();
  const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
      tuple_shapes() const;

  // .xla.Layout layout = 5;
  bool has_layout() const;
  void clear_layout();
  static const int kLayoutFieldNumber = 5;
  const ::xla::Layout& layout() const;
  ::xla::Layout* mutable_layout();
  ::xla::Layout* release_layout();
  void set_allocated_layout(::xla::Layout* layout);

  // .xla.PrimitiveType element_type = 2;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 2;
  ::xla::PrimitiveType element_type() const;
  void set_element_type(::xla::PrimitiveType value);

  // @@protoc_insertion_point(class_scope:xla.Shape)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< tensorflow::int64 > dimensions_;
  mutable int _dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::xla::Shape > tuple_shapes_;
  ::xla::Layout* layout_;
  int element_type_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProgramShape
{
 public:
  ProgramShape();
  virtual ~ProgramShape();

  ProgramShape(const ProgramShape& from);

  inline ProgramShape& operator=(const ProgramShape& from) {
    CopyFrom(from);
    return *this;
  }

  static const ProgramShape& default_instance();

  static inline const ProgramShape* internal_default_instance() {
    return reinterpret_cast<const ProgramShape*>(
               &_ProgramShape_default_instance_);
  }

  void Swap(ProgramShape* other);

  // implements Message ----------------------------------------------

  inline ProgramShape* New() const PROTOBUF_FINAL { return New(NULL); }

  ProgramShape* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const ProgramShape& from);
  void MergeFrom(const ProgramShape& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProgramShape* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.Shape parameters = 1;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 1;
  const ::xla::Shape& parameters(int index) const;
  ::xla::Shape* mutable_parameters(int index);
  ::xla::Shape* add_parameters();
  ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
      mutable_parameters();
  const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
      parameters() const;

  // repeated string parameter_names = 3;
  int parameter_names_size() const;
  void clear_parameter_names();
  static const int kParameterNamesFieldNumber = 3;
  const ::std::string& parameter_names(int index) const;
  ::std::string* mutable_parameter_names(int index);
  void set_parameter_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_parameter_names(int index, ::std::string&& value);
  #endif
  void set_parameter_names(int index, const char* value);
  void set_parameter_names(int index, const char* value, size_t size);
  ::std::string* add_parameter_names();
  void add_parameter_names(const ::std::string& value);
  #if LANG_CXX11
  void add_parameter_names(::std::string&& value);
  #endif
  void add_parameter_names(const char* value);
  void add_parameter_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& parameter_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parameter_names();

  // .xla.Shape result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::xla::Shape& result() const;
  ::xla::Shape* mutable_result();
  ::xla::Shape* release_result();
  void set_allocated_result(::xla::Shape* result);

  // @@protoc_insertion_point(class_scope:xla.ProgramShape)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::Shape > parameters_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parameter_names_;
  ::xla::Shape* result_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComputationHandle
{
 public:
  ComputationHandle();
  virtual ~ComputationHandle();

  ComputationHandle(const ComputationHandle& from);

  inline ComputationHandle& operator=(const ComputationHandle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ComputationHandle& default_instance();

  static inline const ComputationHandle* internal_default_instance() {
    return reinterpret_cast<const ComputationHandle*>(
               &_ComputationHandle_default_instance_);
  }

  void Swap(ComputationHandle* other);

  // implements Message ----------------------------------------------

  inline ComputationHandle* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputationHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const ComputationHandle& from);
  void MergeFrom(const ComputationHandle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationHandle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  tensorflow::int64 handle() const;
  void set_handle(tensorflow::int64 value);

  // @@protoc_insertion_point(class_scope:xla.ComputationHandle)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  tensorflow::int64 handle_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};

// -------------------------------------------------------------------
class GlobalDataHandle
{
public:
   GlobalDataHandle();
   virtual ~GlobalDataHandle();

   GlobalDataHandle(const GlobalDataHandle& from);

   inline GlobalDataHandle& operator=(const GlobalDataHandle& from) {
      CopyFrom(from);
      return *this;
   }

   //static const ::google::protobuf::Descriptor* descriptor();
   static const GlobalDataHandle& default_instance();

   static inline const GlobalDataHandle* internal_default_instance() 
   {
      return reinterpret_cast<const GlobalDataHandle*>(
         &_GlobalDataHandle_default_instance_);
   }
   //static PROTOBUF_CONSTEXPR int const kIndexInFileMessages = 9;

   void Swap(GlobalDataHandle* other);

   // implements Message ----------------------------------------------

   inline GlobalDataHandle* New() const PROTOBUF_FINAL { return New(NULL); }

   GlobalDataHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
   //void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
   //void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
   void CopyFrom(const GlobalDataHandle& from);
   void MergeFrom(const GlobalDataHandle& from);
   void Clear() PROTOBUF_FINAL;
   bool IsInitialized() const PROTOBUF_FINAL;

   //size_t ByteSizeLong() const PROTOBUF_FINAL;
   //bool MergePartialFromCodedStream(
   //   ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
   //void SerializeWithCachedSizes(
   //   ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
   //::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
   //   bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
   int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
private:
   void SharedCtor();
   void SharedDtor();
   void SetCachedSize(int size) const PROTOBUF_FINAL;
   void InternalSwap(GlobalDataHandle* other);
private:
   inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
      return NULL;
   }
   inline void* MaybeArenaPtr() const {
      return NULL;
   }
public:

   //::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

   // nested types ----------------------------------------------------

   // accessors -------------------------------------------------------

   // int64 handle = 1;
   void clear_handle();
   static const int kHandleFieldNumber = 1;
   ::google::protobuf::int64 handle() const;
   void set_handle(::google::protobuf::int64 value);

   // @@protoc_insertion_point(class_scope:xla.GlobalDataHandle)
private:

   //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
   ::google::protobuf::int64 handle_;
   mutable int _cached_size_;
   //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// ------------------------------------------------------------------- 

class ComputationDataHandle
{
 public:
  ComputationDataHandle();
  virtual ~ComputationDataHandle();

  ComputationDataHandle(const ComputationDataHandle& from);

  inline ComputationDataHandle& operator=(const ComputationDataHandle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ComputationDataHandle& default_instance();

  static inline const ComputationDataHandle* internal_default_instance() {
    return reinterpret_cast<const ComputationDataHandle*>(
               &_ComputationDataHandle_default_instance_);
  }

  void Swap(ComputationDataHandle* other);

  // implements Message ----------------------------------------------

  inline ComputationDataHandle* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputationDataHandle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const ComputationDataHandle& from);
  void MergeFrom(const ComputationDataHandle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputationDataHandle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 handle = 1;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  tensorflow::int64 handle() const;
  void set_handle(tensorflow::int64 value);

  // @@protoc_insertion_point(class_scope:xla.ComputationDataHandle)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  tensorflow::int64 handle_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};

// -------------------------------------------------------------------


class Literal
{
 public:
  Literal();
  virtual ~Literal();

  Literal(const Literal& from);

  inline Literal& operator=(const Literal& from) {
    CopyFrom(from);
    return *this;
  }

  //static const ::google::protobuf::Descriptor* descriptor();
  static const Literal& default_instance();

  static inline const Literal* internal_default_instance() {
    return reinterpret_cast<const Literal*>(
               &_Literal_default_instance_);
  }


  void Swap(Literal* other);

  // implements Message ----------------------------------------------

  inline Literal* New() const PROTOBUF_FINAL { return New(NULL); }

  Literal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  //void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  //void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Literal& from);
  void MergeFrom(const Literal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  //bool MergePartialFromCodedStream(
  //    ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  //void SerializeWithCachedSizes(
  //    ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  //::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
  //    bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Literal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  //::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool preds = 2;
  int preds_size() const;
  void clear_preds();
  static const int kPredsFieldNumber = 2;
  bool preds(int index) const;
  void set_preds(int index, bool value);
  void add_preds(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      preds() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_preds();

  // repeated int32 s32s = 4;
  int s32s_size() const;
  void clear_s32s();
  static const int kS32SFieldNumber = 4;
  ::google::protobuf::int32 s32s(int index) const;
  void set_s32s(int index, ::google::protobuf::int32 value);
  void add_s32s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      s32s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_s32s();

  // repeated int64 s64s = 5;
  int s64s_size() const;
  void clear_s64s();

  ::google::protobuf::int64 s64s(int index) const;
  void set_s64s(int index, ::google::protobuf::int64 value);
  void add_s64s(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      s64s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_s64s();

  // repeated uint32 u32s = 6;
  int u32s_size() const;
  void clear_u32s();
  static const int kU32SFieldNumber = 6;
  ::google::protobuf::uint32 u32s(int index) const;
  void set_u32s(int index, ::google::protobuf::uint32 value);
  void add_u32s(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      u32s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_u32s();

  // repeated uint64 u64s = 7;
  int u64s_size() const;
  void clear_u64s();

  ::google::protobuf::uint64 u64s(int index) const;
  void set_u64s(int index, ::google::protobuf::uint64 value);
  void add_u64s(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      u64s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_u64s();

  // repeated float f32s = 8;
  int f32s_size() const;
  void clear_f32s();
  static const int kF32SFieldNumber = 8;
  float f32s(int index) const;
  void set_f32s(int index, float value);
  void add_f32s(float value);
  const ::google::protobuf::RepeatedField< float >&
      f32s() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_f32s();

  // repeated double f64s = 9;
  int f64s_size() const;
  void clear_f64s();
  static const int kF64SFieldNumber = 9;
  double f64s(int index) const;
  void set_f64s(int index, double value);
  void add_f64s(double value);
  const ::google::protobuf::RepeatedField< double >&
      f64s() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_f64s();

  // repeated .xla.Literal tuple_literals = 10;
  int tuple_literals_size() const;
  void clear_tuple_literals();
  static const int kTupleLiteralsFieldNumber = 10;
  const ::xla::Literal& tuple_literals(int index) const;
  ::xla::Literal* mutable_tuple_literals(int index);
  ::xla::Literal* add_tuple_literals();
  ::google::protobuf::RepeatedPtrField< ::xla::Literal >*
      mutable_tuple_literals();
  const ::google::protobuf::RepeatedPtrField< ::xla::Literal >&
      tuple_literals() const;

  // bytes u8s = 3;

  void clear_u8s();
  static const int kU8SFieldNumber = 3;
  const ::std::string& u8s() const;
  void set_u8s(const ::std::string& value);
  #if LANG_CXX11
  void set_u8s(::std::string&& value);
  #endif
  void set_u8s(const char* value);
  void set_u8s(const void* value, size_t size);
  ::std::string* mutable_u8s();
  ::std::string* release_u8s();
  void set_allocated_u8s(::std::string* u8s);


  // .xla.Shape shape = 1;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 1;
  const ::xla::Shape& shape() const;
  ::xla::Shape* mutable_shape();
  ::xla::Shape* release_shape();
  void set_allocated_shape(::xla::Shape* shape);

  // @@protoc_insertion_point(class_scope:xla.Literal)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< bool > preds_;
  mutable int _preds_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > s32s_;
  mutable int _s32s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > s64s_;
  mutable int _s64s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > u32s_;
  mutable int _u32s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > u64s_;
  mutable int _u64s_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > f32s_;
  mutable int _f32s_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > f64s_;
  mutable int _f64s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::xla::Literal > tuple_literals_;
  ::google::protobuf::internal::ArenaStringPtr u8s_;
  ::xla::Shape* shape_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WindowDimension
{
 public:
  WindowDimension();
  virtual ~WindowDimension();

  WindowDimension(const WindowDimension& from);

  inline WindowDimension& operator=(const WindowDimension& from) {
    CopyFrom(from);
    return *this;
  }

  static const WindowDimension& default_instance();

  static inline const WindowDimension* internal_default_instance() {
    return reinterpret_cast<const WindowDimension*>(
               &_WindowDimension_default_instance_);
  }

  void Swap(WindowDimension* other);

  // implements Message ----------------------------------------------

  inline WindowDimension* New() const PROTOBUF_FINAL { return New(NULL); }

  WindowDimension* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const WindowDimension& from);
  void MergeFrom(const WindowDimension& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WindowDimension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  tensorflow::int64 size() const;
  void set_size(tensorflow::int64 value);

  // int64 stride = 2;
  void clear_stride();
  static const int kStrideFieldNumber = 2;
  tensorflow::int64 stride() const;
  void set_stride(tensorflow::int64 value);

  // int64 padding_low = 3;
  void clear_padding_low();
  static const int kPaddingLowFieldNumber = 3;
  tensorflow::int64 padding_low() const;
  void set_padding_low(tensorflow::int64 value);

  // int64 padding_high = 4;
  void clear_padding_high();
  static const int kPaddingHighFieldNumber = 4;
  tensorflow::int64 padding_high() const;
  void set_padding_high(tensorflow::int64 value);

  // int64 window_dilation = 5;
  void clear_window_dilation();
  static const int kWindowDilationFieldNumber = 5;
  tensorflow::int64 window_dilation() const;
  void set_window_dilation(tensorflow::int64 value);

  // int64 base_dilation = 6;
  void clear_base_dilation();
  static const int kBaseDilationFieldNumber = 6;
  tensorflow::int64 base_dilation() const;
  void set_base_dilation(tensorflow::int64 value);

  // @@protoc_insertion_point(class_scope:xla.WindowDimension)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  tensorflow::int64 size_;
  tensorflow::int64 stride_;
  tensorflow::int64 padding_low_;
  tensorflow::int64 padding_high_;
  tensorflow::int64 window_dilation_;
  tensorflow::int64 base_dilation_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Window
{
 public:
  Window();
  virtual ~Window();

  Window(const Window& from);

  inline Window& operator=(const Window& from) {
    CopyFrom(from);
    return *this;
  }

  static const Window& default_instance();

  static inline const Window* internal_default_instance() 
  {
    return reinterpret_cast<const Window*>(&_Window_default_instance_);
  }

  void Swap(Window* other);

  // implements Message ----------------------------------------------

  inline Window* New() const PROTOBUF_FINAL { return New(NULL); }

  Window* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const Window& from);
  void MergeFrom(const Window& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  //size_t ByteSizeLong() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Window* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.WindowDimension dimensions = 1;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 1;
  const ::xla::WindowDimension& dimensions(int index) const;
  ::xla::WindowDimension* mutable_dimensions(int index);
  ::xla::WindowDimension* add_dimensions();
  ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >*
      mutable_dimensions();
  const ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >&
      dimensions() const;

  // @@protoc_insertion_point(class_scope:xla.Window)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension > dimensions_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConvolutionDimensionNumbers
{
 public:
  ConvolutionDimensionNumbers();
  virtual ~ConvolutionDimensionNumbers();

  ConvolutionDimensionNumbers(const ConvolutionDimensionNumbers& from);

  inline ConvolutionDimensionNumbers& operator=(const ConvolutionDimensionNumbers& from) {
    CopyFrom(from);
    return *this;
  }

  static const ConvolutionDimensionNumbers& default_instance();

  static inline const ConvolutionDimensionNumbers* internal_default_instance() {
    return reinterpret_cast<const ConvolutionDimensionNumbers*>(
               &_ConvolutionDimensionNumbers_default_instance_);
  }

  void Swap(ConvolutionDimensionNumbers* other);

  // implements Message ----------------------------------------------

  inline ConvolutionDimensionNumbers* New() const PROTOBUF_FINAL { return New(NULL); }

  ConvolutionDimensionNumbers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
 
 
  void CopyFrom(const ConvolutionDimensionNumbers& from);
  void MergeFrom(const ConvolutionDimensionNumbers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConvolutionDimensionNumbers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

   

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 spatial_dimensions = 5;
  int spatial_dimensions_size() const;
  void clear_spatial_dimensions();
  static const int kSpatialDimensionsFieldNumber = 5;
  tensorflow::int64 spatial_dimensions(int index) const;
  void set_spatial_dimensions(int index, tensorflow::int64 value);
  void add_spatial_dimensions(tensorflow::int64 value);
  const ::google::protobuf::RepeatedField< tensorflow::int64 >&
      spatial_dimensions() const;
  ::google::protobuf::RepeatedField< tensorflow::int64 >*
      mutable_spatial_dimensions();

  // repeated int64 kernel_spatial_dimensions = 6;
  int kernel_spatial_dimensions_size() const;
  void clear_kernel_spatial_dimensions();
  static const int kKernelSpatialDimensionsFieldNumber = 6;
  tensorflow::int64 kernel_spatial_dimensions(int index) const;
  void set_kernel_spatial_dimensions(int index, tensorflow::int64 value);
  void add_kernel_spatial_dimensions(tensorflow::int64 value);
  const ::google::protobuf::RepeatedField< tensorflow::int64 >&
      kernel_spatial_dimensions() const;
  ::google::protobuf::RepeatedField< tensorflow::int64 >*
      mutable_kernel_spatial_dimensions();

  // int64 batch_dimension = 1;
  void clear_batch_dimension();
  static const int kBatchDimensionFieldNumber = 1;
  tensorflow::int64 batch_dimension() const;
  void set_batch_dimension(tensorflow::int64 value);

  // int64 feature_dimension = 2;
  void clear_feature_dimension();
  static const int kFeatureDimensionFieldNumber = 2;
  tensorflow::int64 feature_dimension() const;
  void set_feature_dimension(tensorflow::int64 value);

  // int64 kernel_input_feature_dimension = 3;
  void clear_kernel_input_feature_dimension();
  static const int kKernelInputFeatureDimensionFieldNumber = 3;
  tensorflow::int64 kernel_input_feature_dimension() const;
  void set_kernel_input_feature_dimension(tensorflow::int64 value);

  // int64 kernel_output_feature_dimension = 4;
  void clear_kernel_output_feature_dimension();
  static const int kKernelOutputFeatureDimensionFieldNumber = 4;
  tensorflow::int64 kernel_output_feature_dimension() const;
  void set_kernel_output_feature_dimension(tensorflow::int64 value);

  // @@protoc_insertion_point(class_scope:xla.ConvolutionDimensionNumbers)
 private:

  //::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< tensorflow::int64 > spatial_dimensions_;
  mutable int _spatial_dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< tensorflow::int64 > kernel_spatial_dimensions_;
  mutable int _kernel_spatial_dimensions_cached_byte_size_;
  tensorflow::int64 batch_dimension_;
  tensorflow::int64 feature_dimension_;
  tensorflow::int64 kernel_input_feature_dimension_;
  tensorflow::int64 kernel_output_feature_dimension_;
  mutable int _cached_size_;
  //friend struct protobuf_xla_5fdata_2eproto::TableStruct;
};
// -------------------------------------------------------------------
// -------------------------------------------------------------------

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PaddingConfig_PaddingConfigDimension

// int64 edge_padding_low = 1;
inline void PaddingConfig_PaddingConfigDimension::clear_edge_padding_low() {
   edge_padding_low_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PaddingConfig_PaddingConfigDimension::edge_padding_low() const {
   // @@protoc_insertion_point(field_get:xla.PaddingConfig.PaddingConfigDimension.edge_padding_low)
   return edge_padding_low_;
}
inline void PaddingConfig_PaddingConfigDimension::set_edge_padding_low(::google::protobuf::int64 value) {

   edge_padding_low_ = value;
   // @@protoc_insertion_point(field_set:xla.PaddingConfig.PaddingConfigDimension.edge_padding_low)
}

// int64 edge_padding_high = 2;
inline void PaddingConfig_PaddingConfigDimension::clear_edge_padding_high() {
   edge_padding_high_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PaddingConfig_PaddingConfigDimension::edge_padding_high() const {
   // @@protoc_insertion_point(field_get:xla.PaddingConfig.PaddingConfigDimension.edge_padding_high)
   return edge_padding_high_;
}
inline void PaddingConfig_PaddingConfigDimension::set_edge_padding_high(::google::protobuf::int64 value) {

   edge_padding_high_ = value;
   // @@protoc_insertion_point(field_set:xla.PaddingConfig.PaddingConfigDimension.edge_padding_high)
}

// int64 interior_padding = 3;
inline void PaddingConfig_PaddingConfigDimension::clear_interior_padding() {
   interior_padding_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PaddingConfig_PaddingConfigDimension::interior_padding() const {
   // @@protoc_insertion_point(field_get:xla.PaddingConfig.PaddingConfigDimension.interior_padding)
   return interior_padding_;
}
inline void PaddingConfig_PaddingConfigDimension::set_interior_padding(::google::protobuf::int64 value) {

   interior_padding_ = value;
   // @@protoc_insertion_point(field_set:xla.PaddingConfig.PaddingConfigDimension.interior_padding)
}

// -------------------------------------------------------------------

// PaddingConfig

// repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;
inline int PaddingConfig::dimensions_size() const {
   return dimensions_.size();
}
inline void PaddingConfig::clear_dimensions() {
   dimensions_.Clear();
}
inline const ::xla::PaddingConfig_PaddingConfigDimension& PaddingConfig::dimensions(int index) const {
   // @@protoc_insertion_point(field_get:xla.PaddingConfig.dimensions)
   return dimensions_.Get(index);
}
inline ::xla::PaddingConfig_PaddingConfigDimension* PaddingConfig::mutable_dimensions(int index) {
   // @@protoc_insertion_point(field_mutable:xla.PaddingConfig.dimensions)
   return dimensions_.Mutable(index);
}
inline ::xla::PaddingConfig_PaddingConfigDimension* PaddingConfig::add_dimensions() {
   // @@protoc_insertion_point(field_add:xla.PaddingConfig.dimensions)
   return dimensions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >*
PaddingConfig::mutable_dimensions() {
   // @@protoc_insertion_point(field_mutable_list:xla.PaddingConfig.dimensions)
   return &dimensions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::PaddingConfig_PaddingConfigDimension >&
PaddingConfig::dimensions() const {
   // @@protoc_insertion_point(field_list:xla.PaddingConfig.dimensions)
   return dimensions_;
}

// -------------------------------------------------------------------

// Layout

// repeated int64 minor_to_major = 1;
inline int Layout::minor_to_major_size() const {
  return minor_to_major_.size();
}
inline void Layout::clear_minor_to_major() {
  minor_to_major_.Clear();
}
inline tensorflow::int64 Layout::minor_to_major(int index) const {
  // @@protoc_insertion_point(field_get:xla.Layout.minor_to_major)
  return minor_to_major_.Get(index);
}
inline void Layout::set_minor_to_major(int index, tensorflow::int64 value) {
  minor_to_major_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.Layout.minor_to_major)
}
inline void Layout::add_minor_to_major(tensorflow::int64 value) {
  minor_to_major_.Add(value);
  // @@protoc_insertion_point(field_add:xla.Layout.minor_to_major)
}
inline const ::google::protobuf::RepeatedField< tensorflow::int64 >&
Layout::minor_to_major() const {
  // @@protoc_insertion_point(field_list:xla.Layout.minor_to_major)
  return minor_to_major_;
}
inline ::google::protobuf::RepeatedField< tensorflow::int64 >*
Layout::mutable_minor_to_major() {
  // @@protoc_insertion_point(field_mutable_list:xla.Layout.minor_to_major)
  return &minor_to_major_;
}

// repeated int64 padded_dimensions = 2;
inline int Layout::padded_dimensions_size() const {
  return padded_dimensions_.size();
}
inline void Layout::clear_padded_dimensions() {
  padded_dimensions_.Clear();
}
inline tensorflow::int64 Layout::padded_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.Layout.padded_dimensions)
  return padded_dimensions_.Get(index);
}
inline void Layout::set_padded_dimensions(int index, tensorflow::int64 value) {
  padded_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.Layout.padded_dimensions)
}
inline void Layout::add_padded_dimensions(tensorflow::int64 value) {
  padded_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.Layout.padded_dimensions)
}
inline const ::google::protobuf::RepeatedField< tensorflow::int64 >&
Layout::padded_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.Layout.padded_dimensions)
  return padded_dimensions_;
}
inline ::google::protobuf::RepeatedField< tensorflow::int64 >*
Layout::mutable_padded_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.Layout.padded_dimensions)
  return &padded_dimensions_;
}

// .xla.PaddingValue padding_value = 3;
inline void Layout::clear_padding_value() {
  padding_value_ = 0;
}
inline ::xla::PaddingValue Layout::padding_value() const {
  // @@protoc_insertion_point(field_get:xla.Layout.padding_value)
  return static_cast< ::xla::PaddingValue >(padding_value_);
}
inline void Layout::set_padding_value(::xla::PaddingValue value) {
  
  padding_value_ = value;
  // @@protoc_insertion_point(field_set:xla.Layout.padding_value)
}

// -------------------------------------------------------------------

// Shape

// .xla.PrimitiveType element_type = 2;
inline void Shape::clear_element_type() {
  element_type_ = 0;
}
inline ::xla::PrimitiveType Shape::element_type() const {
  // @@protoc_insertion_point(field_get:xla.Shape.element_type)
  return static_cast< ::xla::PrimitiveType >(element_type_);
}
inline void Shape::set_element_type(::xla::PrimitiveType value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:xla.Shape.element_type)
}

// repeated int64 dimensions = 3;
inline int Shape::dimensions_size() const {
  return dimensions_.size();
}
inline void Shape::clear_dimensions() {
  dimensions_.Clear();
}
inline tensorflow::int64 Shape::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.Shape.dimensions)
  return dimensions_.Get(index);
}
inline void Shape::set_dimensions(int index, tensorflow::int64 value) {
  dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.Shape.dimensions)
}
inline void Shape::add_dimensions(tensorflow::int64 value) {
  dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.Shape.dimensions)
}
inline const ::google::protobuf::RepeatedField< tensorflow::int64 >&
Shape::dimensions() const {
  // @@protoc_insertion_point(field_list:xla.Shape.dimensions)
  return dimensions_;
}
inline ::google::protobuf::RepeatedField< tensorflow::int64 >*
Shape::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.Shape.dimensions)
  return &dimensions_;
}

// repeated .xla.Shape tuple_shapes = 4;
inline int Shape::tuple_shapes_size() const {
  return tuple_shapes_.size();
}
inline void Shape::clear_tuple_shapes() {
  tuple_shapes_.Clear();
}
inline const ::xla::Shape& Shape::tuple_shapes(int index) const {
  // @@protoc_insertion_point(field_get:xla.Shape.tuple_shapes)
  return tuple_shapes_.Get(index);
}
inline ::xla::Shape* Shape::mutable_tuple_shapes(int index) {
  // @@protoc_insertion_point(field_mutable:xla.Shape.tuple_shapes)
  return tuple_shapes_.Mutable(index);
}
inline ::xla::Shape* Shape::add_tuple_shapes() {
  // @@protoc_insertion_point(field_add:xla.Shape.tuple_shapes)
  return tuple_shapes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
Shape::mutable_tuple_shapes() {
  // @@protoc_insertion_point(field_mutable_list:xla.Shape.tuple_shapes)
  return &tuple_shapes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
Shape::tuple_shapes() const {
  // @@protoc_insertion_point(field_list:xla.Shape.tuple_shapes)
  return tuple_shapes_;
}

// .xla.Layout layout = 5;
inline bool Shape::has_layout() const {
  return this != internal_default_instance() && layout_ != NULL;
}
inline void Shape::clear_layout() {
  if (GetArenaNoVirtual() == NULL && layout_ != NULL) delete layout_;
  layout_ = NULL;
}
inline const ::xla::Layout& Shape::layout() const {
  // @@protoc_insertion_point(field_get:xla.Shape.layout)
  return layout_ != NULL ? *layout_
                         : *::xla::Layout::internal_default_instance();
}
inline ::xla::Layout* Shape::mutable_layout() {
  
  if (layout_ == NULL) {
    layout_ = new ::xla::Layout;
  }
  // @@protoc_insertion_point(field_mutable:xla.Shape.layout)
  return layout_;
}
inline ::xla::Layout* Shape::release_layout() {
  // @@protoc_insertion_point(field_release:xla.Shape.layout)
  
  ::xla::Layout* temp = layout_;
  layout_ = NULL;
  return temp;
}
inline void Shape::set_allocated_layout(::xla::Layout* layout) {
  delete layout_;
  layout_ = layout;
  if (layout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.Shape.layout)
}

// -------------------------------------------------------------------

// ProgramShape

// repeated .xla.Shape parameters = 1;
inline int ProgramShape::parameters_size() const {
  return parameters_.size();
}
inline void ProgramShape::clear_parameters() {
  parameters_.Clear();
}
inline const ::xla::Shape& ProgramShape::parameters(int index) const {
  // @@protoc_insertion_point(field_get:xla.ProgramShape.parameters)
  return parameters_.Get(index);
}
inline ::xla::Shape* ProgramShape::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ProgramShape.parameters)
  return parameters_.Mutable(index);
}
inline ::xla::Shape* ProgramShape::add_parameters() {
  // @@protoc_insertion_point(field_add:xla.ProgramShape.parameters)
  return parameters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::Shape >*
ProgramShape::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:xla.ProgramShape.parameters)
  return &parameters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::Shape >&
ProgramShape::parameters() const {
  // @@protoc_insertion_point(field_list:xla.ProgramShape.parameters)
  return parameters_;
}

// .xla.Shape result = 2;
inline bool ProgramShape::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void ProgramShape::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::xla::Shape& ProgramShape::result() const {
  // @@protoc_insertion_point(field_get:xla.ProgramShape.result)
  return result_ != NULL ? *result_
                         : *::xla::Shape::internal_default_instance();
}
inline ::xla::Shape* ProgramShape::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::xla::Shape;
  }
  // @@protoc_insertion_point(field_mutable:xla.ProgramShape.result)
  return result_;
}
inline ::xla::Shape* ProgramShape::release_result() {
  // @@protoc_insertion_point(field_release:xla.ProgramShape.result)
  
  ::xla::Shape* temp = result_;
  result_ = NULL;
  return temp;
}

inline void ProgramShape::set_allocated_result(::xla::Shape* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.ProgramShape.result)
}

// repeated string parameter_names = 3;
inline int ProgramShape::parameter_names_size() const {
  return parameter_names_.size();
}
inline void ProgramShape::clear_parameter_names() {
  parameter_names_.Clear();
}
inline const ::std::string& ProgramShape::parameter_names(int index) const {
  // @@protoc_insertion_point(field_get:xla.ProgramShape.parameter_names)
  return parameter_names_.Get(index);
}
inline ::std::string* ProgramShape::mutable_parameter_names(int index) {
  // @@protoc_insertion_point(field_mutable:xla.ProgramShape.parameter_names)
  return parameter_names_.Mutable(index);
}
inline void ProgramShape::set_parameter_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xla.ProgramShape.parameter_names)
  parameter_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProgramShape::set_parameter_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xla.ProgramShape.parameter_names)
  parameter_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProgramShape::set_parameter_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  parameter_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xla.ProgramShape.parameter_names)
}
inline void ProgramShape::set_parameter_names(int index, const char* value, size_t size) {
  parameter_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xla.ProgramShape.parameter_names)
}
inline ::std::string* ProgramShape::add_parameter_names() {
  // @@protoc_insertion_point(field_add_mutable:xla.ProgramShape.parameter_names)
  return parameter_names_.Add();
}
inline void ProgramShape::add_parameter_names(const ::std::string& value) {
  parameter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xla.ProgramShape.parameter_names)
}
#if LANG_CXX11
inline void ProgramShape::add_parameter_names(::std::string&& value) {
  parameter_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xla.ProgramShape.parameter_names)
}
#endif
inline void ProgramShape::add_parameter_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  parameter_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xla.ProgramShape.parameter_names)
}
inline void ProgramShape::add_parameter_names(const char* value, size_t size) {
  parameter_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xla.ProgramShape.parameter_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProgramShape::parameter_names() const {
  // @@protoc_insertion_point(field_list:xla.ProgramShape.parameter_names)
  return parameter_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProgramShape::mutable_parameter_names() {
  // @@protoc_insertion_point(field_mutable_list:xla.ProgramShape.parameter_names)
  return &parameter_names_;
}

// -------------------------------------------------------------------

// ComputationHandle

// int64 handle = 1;
inline void ComputationHandle::clear_handle() {
   handle_ = GOOGLE_LONGLONG(0);
}
inline tensorflow::int64 ComputationHandle::handle() const {
   // @@protoc_insertion_point(field_get:xla.ComputationHandle.handle)
   return handle_;
}
inline void ComputationHandle::set_handle(tensorflow::int64 value) {

   handle_ = value;
   // @@protoc_insertion_point(field_set:xla.ComputationHandle.handle)
}
// -------------------------------------------------------------------

// GlobalDataHandle

// int64 handle = 1;
inline void GlobalDataHandle::clear_handle() {
   handle_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GlobalDataHandle::handle() const {
   // @@protoc_insertion_point(field_get:xla.GlobalDataHandle.handle)
   return handle_;
}
inline void GlobalDataHandle::set_handle(::google::protobuf::int64 value) {

   handle_ = value;
   // @@protoc_insertion_point(field_set:xla.GlobalDataHandle.handle)
}

// -------------------------------------------------------------------
// ComputationDataHandle

// int64 handle = 1;
inline void ComputationDataHandle::clear_handle() {
  handle_ = GOOGLE_LONGLONG(0);
}
inline tensorflow::int64 ComputationDataHandle::handle() const {
  // @@protoc_insertion_point(field_get:xla.ComputationDataHandle.handle)
  return handle_;
}
inline void ComputationDataHandle::set_handle(tensorflow::int64 value) {
  
  handle_ = value;
  // @@protoc_insertion_point(field_set:xla.ComputationDataHandle.handle)
}


// -------------------------------------------------------------------

// Literal

// .xla.Shape shape = 1;
inline bool Literal::has_shape() const {
   return this != internal_default_instance() && shape_ != NULL;
}
inline void Literal::clear_shape() {
   if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
   shape_ = NULL;
}
inline const ::xla::Shape& Literal::shape() const {
   // @@protoc_insertion_point(field_get:xla.Literal.shape)
   return shape_ != NULL ? *shape_
      : *::xla::Shape::internal_default_instance();
}
inline ::xla::Shape* Literal::mutable_shape() {

   if (shape_ == NULL) {
      shape_ = new ::xla::Shape;
   }
   // @@protoc_insertion_point(field_mutable:xla.Literal.shape)
   return shape_;
}
inline ::xla::Shape* Literal::release_shape() {
   // @@protoc_insertion_point(field_release:xla.Literal.shape)

   ::xla::Shape* temp = shape_;
   shape_ = NULL;
   return temp;
}
inline void Literal::set_allocated_shape(::xla::Shape* shape) {
   delete shape_;
   shape_ = shape;
   if (shape) {

   }
   else {

   }
   // @@protoc_insertion_point(field_set_allocated:xla.Literal.shape)
}

// repeated bool preds = 2;
inline int Literal::preds_size() const {
   return preds_.size();
}
inline void Literal::clear_preds() {
   preds_.Clear();
}
inline bool Literal::preds(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.preds)
   return preds_.Get(index);
}
inline void Literal::set_preds(int index, bool value) {
   preds_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.preds)
}
inline void Literal::add_preds(bool value) {
   preds_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.preds)
}
inline const ::google::protobuf::RepeatedField< bool >&
Literal::preds() const {
   // @@protoc_insertion_point(field_list:xla.Literal.preds)
   return preds_;
}
inline ::google::protobuf::RepeatedField< bool >*
Literal::mutable_preds() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.preds)
   return &preds_;
}

// bytes u8s = 3;

inline void Literal::clear_u8s() {
   u8s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Literal::u8s() const {
   // @@protoc_insertion_point(field_get:xla.Literal.u8s)
   return u8s_.GetNoArena();
}
inline void Literal::set_u8s(const ::std::string& value) {

   u8s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
   // @@protoc_insertion_point(field_set:xla.Literal.u8s)
}
#if LANG_CXX11
inline void Literal::set_u8s(::std::string&& value) {

   u8s_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
   // @@protoc_insertion_point(field_set_rvalue:xla.Literal.u8s)
}
#endif
inline void Literal::set_u8s(const char* value) {
   GOOGLE_DCHECK(value != NULL);

   u8s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
   // @@protoc_insertion_point(field_set_char:xla.Literal.u8s)
}
inline void Literal::set_u8s(const void* value, size_t size) {

   u8s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
   // @@protoc_insertion_point(field_set_pointer:xla.Literal.u8s)
}
inline ::std::string* Literal::mutable_u8s() {

   // @@protoc_insertion_point(field_mutable:xla.Literal.u8s)
   return u8s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Literal::release_u8s() {
   // @@protoc_insertion_point(field_release:xla.Literal.u8s)

   return u8s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Literal::set_allocated_u8s(::std::string* u8s) {
   if (u8s != NULL) {

   }
   else {

   }
   u8s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), u8s);
   // @@protoc_insertion_point(field_set_allocated:xla.Literal.u8s)
}

// repeated int32 s32s = 4;
inline int Literal::s32s_size() const {
   return s32s_.size();
}
inline void Literal::clear_s32s() {
   s32s_.Clear();
}
inline ::google::protobuf::int32 Literal::s32s(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.s32s)
   return s32s_.Get(index);
}
inline void Literal::set_s32s(int index, ::google::protobuf::int32 value) {
   s32s_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.s32s)
}
inline void Literal::add_s32s(::google::protobuf::int32 value) {
   s32s_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.s32s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Literal::s32s() const {
   // @@protoc_insertion_point(field_list:xla.Literal.s32s)
   return s32s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Literal::mutable_s32s() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.s32s)
   return &s32s_;
}

// repeated int64 s64s = 5;
inline int Literal::s64s_size() const {
   return s64s_.size();
}
inline void Literal::clear_s64s() {
   s64s_.Clear();
}
inline ::google::protobuf::int64 Literal::s64s(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.s64s)
   return s64s_.Get(index);
}
inline void Literal::set_s64s(int index, ::google::protobuf::int64 value) {
   s64s_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.s64s)
}
inline void Literal::add_s64s(::google::protobuf::int64 value) {
   s64s_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.s64s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Literal::s64s() const {
   // @@protoc_insertion_point(field_list:xla.Literal.s64s)
   return s64s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Literal::mutable_s64s() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.s64s)
   return &s64s_;
}

// repeated uint32 u32s = 6;
inline int Literal::u32s_size() const {
   return u32s_.size();
}
inline void Literal::clear_u32s() {
   u32s_.Clear();
}
inline ::google::protobuf::uint32 Literal::u32s(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.u32s)
   return u32s_.Get(index);
}
inline void Literal::set_u32s(int index, ::google::protobuf::uint32 value) {
   u32s_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.u32s)
}
inline void Literal::add_u32s(::google::protobuf::uint32 value) {
   u32s_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.u32s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Literal::u32s() const {
   // @@protoc_insertion_point(field_list:xla.Literal.u32s)
   return u32s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Literal::mutable_u32s() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.u32s)
   return &u32s_;
}

// repeated uint64 u64s = 7;
inline int Literal::u64s_size() const {
   return u64s_.size();
}
inline void Literal::clear_u64s() {
   u64s_.Clear();
}
inline ::google::protobuf::uint64 Literal::u64s(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.u64s)
   return u64s_.Get(index);
}
inline void Literal::set_u64s(int index, ::google::protobuf::uint64 value) {
   u64s_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.u64s)
}
inline void Literal::add_u64s(::google::protobuf::uint64 value) {
   u64s_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.u64s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Literal::u64s() const {
   // @@protoc_insertion_point(field_list:xla.Literal.u64s)
   return u64s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Literal::mutable_u64s() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.u64s)
   return &u64s_;
}

// repeated float f32s = 8;
inline int Literal::f32s_size() const {
   return f32s_.size();
}
inline void Literal::clear_f32s() {
   f32s_.Clear();
}
inline float Literal::f32s(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.f32s)
   return f32s_.Get(index);
}
inline void Literal::set_f32s(int index, float value) {
   f32s_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.f32s)
}
inline void Literal::add_f32s(float value) {
   f32s_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.f32s)
}
inline const ::google::protobuf::RepeatedField< float >&
Literal::f32s() const {
   // @@protoc_insertion_point(field_list:xla.Literal.f32s)
   return f32s_;
}
inline ::google::protobuf::RepeatedField< float >*
Literal::mutable_f32s() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.f32s)
   return &f32s_;
}

// repeated double f64s = 9;
inline int Literal::f64s_size() const {
   return f64s_.size();
}
inline void Literal::clear_f64s() {
   f64s_.Clear();
}
inline double Literal::f64s(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.f64s)
   return f64s_.Get(index);
}
inline void Literal::set_f64s(int index, double value) {
   f64s_.Set(index, value);
   // @@protoc_insertion_point(field_set:xla.Literal.f64s)
}
inline void Literal::add_f64s(double value) {
   f64s_.Add(value);
   // @@protoc_insertion_point(field_add:xla.Literal.f64s)
}
inline const ::google::protobuf::RepeatedField< double >&
Literal::f64s() const {
   // @@protoc_insertion_point(field_list:xla.Literal.f64s)
   return f64s_;
}
inline ::google::protobuf::RepeatedField< double >*
Literal::mutable_f64s() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.f64s)
   return &f64s_;
}

// repeated .xla.Literal tuple_literals = 10;
inline int Literal::tuple_literals_size() const {
   return tuple_literals_.size();
}
inline void Literal::clear_tuple_literals() {
   tuple_literals_.Clear();
}
inline const ::xla::Literal& Literal::tuple_literals(int index) const {
   // @@protoc_insertion_point(field_get:xla.Literal.tuple_literals)
   return tuple_literals_.Get(index);
}
inline ::xla::Literal* Literal::mutable_tuple_literals(int index) {
   // @@protoc_insertion_point(field_mutable:xla.Literal.tuple_literals)
   return tuple_literals_.Mutable(index);
}
inline ::xla::Literal* Literal::add_tuple_literals() {
   // @@protoc_insertion_point(field_add:xla.Literal.tuple_literals)
   return tuple_literals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::Literal >*
Literal::mutable_tuple_literals() {
   // @@protoc_insertion_point(field_mutable_list:xla.Literal.tuple_literals)
   return &tuple_literals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::Literal >&
Literal::tuple_literals() const {
   // @@protoc_insertion_point(field_list:xla.Literal.tuple_literals)
   return tuple_literals_;
}


// -------------------------------------------------------------------

// WindowDimension

// int64 size = 1;
inline void WindowDimension::clear_size() {
  size_ = tensorflow::int64(0);
}
inline tensorflow::int64 WindowDimension::size() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.size)
  return size_;
}
inline void WindowDimension::set_size(tensorflow::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.size)
}

// int64 stride = 2;
inline void WindowDimension::clear_stride() {
  stride_ = tensorflow::int64(0);
}
inline tensorflow::int64 WindowDimension::stride() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.stride)
  return stride_;
}
inline void WindowDimension::set_stride(tensorflow::int64 value) {
  
  stride_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.stride)
}

// int64 padding_low = 3;
inline void WindowDimension::clear_padding_low() {
  padding_low_ = tensorflow::int64(0);
}
inline tensorflow::int64 WindowDimension::padding_low() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.padding_low)
  return padding_low_;
}
inline void WindowDimension::set_padding_low(tensorflow::int64 value) {
  
  padding_low_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.padding_low)
}

// int64 padding_high = 4;
inline void WindowDimension::clear_padding_high() {
  padding_high_ = tensorflow::int64(0);
}
inline tensorflow::int64 WindowDimension::padding_high() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.padding_high)
  return padding_high_;
}
inline void WindowDimension::set_padding_high(tensorflow::int64 value) {
  
  padding_high_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.padding_high)
}

// int64 window_dilation = 5;
inline void WindowDimension::clear_window_dilation() {
  window_dilation_ = tensorflow::int64(0);
}
inline tensorflow::int64 WindowDimension::window_dilation() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.window_dilation)
  return window_dilation_;
}
inline void WindowDimension::set_window_dilation(tensorflow::int64 value) {
  
  window_dilation_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.window_dilation)
}

// int64 base_dilation = 6;
inline void WindowDimension::clear_base_dilation() {
  base_dilation_ = tensorflow::int64(0);
}
inline tensorflow::int64 WindowDimension::base_dilation() const {
  // @@protoc_insertion_point(field_get:xla.WindowDimension.base_dilation)
  return base_dilation_;
}
inline void WindowDimension::set_base_dilation(tensorflow::int64 value) {
  
  base_dilation_ = value;
  // @@protoc_insertion_point(field_set:xla.WindowDimension.base_dilation)
}

// -------------------------------------------------------------------

// Window

// repeated .xla.WindowDimension dimensions = 1;
inline int Window::dimensions_size() const {
  return dimensions_.size();
}
inline void Window::clear_dimensions() {
  dimensions_.Clear();
}
inline const ::xla::WindowDimension& Window::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.Window.dimensions)
  return dimensions_.Get(index);
}
inline ::xla::WindowDimension* Window::mutable_dimensions(int index) {
  // @@protoc_insertion_point(field_mutable:xla.Window.dimensions)
  return dimensions_.Mutable(index);
}
inline ::xla::WindowDimension* Window::add_dimensions() {
  // @@protoc_insertion_point(field_add:xla.Window.dimensions)
  return dimensions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >*
Window::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.Window.dimensions)
  return &dimensions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::WindowDimension >&
Window::dimensions() const {
  // @@protoc_insertion_point(field_list:xla.Window.dimensions)
  return dimensions_;
}

// -------------------------------------------------------------------

// ConvolutionDimensionNumbers

// int64 batch_dimension = 1;
inline void ConvolutionDimensionNumbers::clear_batch_dimension() {
  batch_dimension_ = tensorflow::int64(0);
}
inline tensorflow::int64 ConvolutionDimensionNumbers::batch_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.batch_dimension)
  return batch_dimension_;
}
inline void ConvolutionDimensionNumbers::set_batch_dimension(tensorflow::int64 value) {
  
  batch_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.batch_dimension)
}

// int64 feature_dimension = 2;
inline void ConvolutionDimensionNumbers::clear_feature_dimension() {
  feature_dimension_ = tensorflow::int64(0);
}
inline tensorflow::int64 ConvolutionDimensionNumbers::feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.feature_dimension)
  return feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_feature_dimension(tensorflow::int64 value) {
  
  feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.feature_dimension)
}

// repeated int64 spatial_dimensions = 5;
inline int ConvolutionDimensionNumbers::spatial_dimensions_size() const {
  return spatial_dimensions_.size();
}
inline void ConvolutionDimensionNumbers::clear_spatial_dimensions() {
  spatial_dimensions_.Clear();
}
inline tensorflow::int64 ConvolutionDimensionNumbers::spatial_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.spatial_dimensions)
  return spatial_dimensions_.Get(index);
}
inline void ConvolutionDimensionNumbers::set_spatial_dimensions(int index, tensorflow::int64 value) {
  spatial_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.spatial_dimensions)
}
inline void ConvolutionDimensionNumbers::add_spatial_dimensions(tensorflow::int64 value) {
  spatial_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.ConvolutionDimensionNumbers.spatial_dimensions)
}
inline const ::google::protobuf::RepeatedField< tensorflow::int64 >&
ConvolutionDimensionNumbers::spatial_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.ConvolutionDimensionNumbers.spatial_dimensions)
  return spatial_dimensions_;
}
inline ::google::protobuf::RepeatedField< tensorflow::int64 >*
ConvolutionDimensionNumbers::mutable_spatial_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.ConvolutionDimensionNumbers.spatial_dimensions)
  return &spatial_dimensions_;
}

// int64 kernel_input_feature_dimension = 3;
inline void ConvolutionDimensionNumbers::clear_kernel_input_feature_dimension() {
  kernel_input_feature_dimension_ = tensorflow::int64(0);
}
inline tensorflow::int64 ConvolutionDimensionNumbers::kernel_input_feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.kernel_input_feature_dimension)
  return kernel_input_feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_kernel_input_feature_dimension(tensorflow::int64 value) {
  
  kernel_input_feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.kernel_input_feature_dimension)
}

// int64 kernel_output_feature_dimension = 4;
inline void ConvolutionDimensionNumbers::clear_kernel_output_feature_dimension() {
  kernel_output_feature_dimension_ = tensorflow::int64(0);
}
inline tensorflow::int64 ConvolutionDimensionNumbers::kernel_output_feature_dimension() const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.kernel_output_feature_dimension)
  return kernel_output_feature_dimension_;
}
inline void ConvolutionDimensionNumbers::set_kernel_output_feature_dimension(tensorflow::int64 value) {
  
  kernel_output_feature_dimension_ = value;
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.kernel_output_feature_dimension)
}

// repeated int64 kernel_spatial_dimensions = 6;
inline int ConvolutionDimensionNumbers::kernel_spatial_dimensions_size() const {
  return kernel_spatial_dimensions_.size();
}
inline void ConvolutionDimensionNumbers::clear_kernel_spatial_dimensions() {
  kernel_spatial_dimensions_.Clear();
}
inline tensorflow::int64 ConvolutionDimensionNumbers::kernel_spatial_dimensions(int index) const {
  // @@protoc_insertion_point(field_get:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
  return kernel_spatial_dimensions_.Get(index);
}
inline void ConvolutionDimensionNumbers::set_kernel_spatial_dimensions(int index, tensorflow::int64 value) {
  kernel_spatial_dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
}
inline void ConvolutionDimensionNumbers::add_kernel_spatial_dimensions(tensorflow::int64 value) {
  kernel_spatial_dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
}
inline const ::google::protobuf::RepeatedField< tensorflow::int64 >&
ConvolutionDimensionNumbers::kernel_spatial_dimensions() const {
  // @@protoc_insertion_point(field_list:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
  return kernel_spatial_dimensions_;
}
inline ::google::protobuf::RepeatedField< tensorflow::int64 >*
ConvolutionDimensionNumbers::mutable_kernel_spatial_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:xla.ConvolutionDimensionNumbers.kernel_spatial_dimensions)
  return &kernel_spatial_dimensions_;
}

// -------------------------------------------------------------------


#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

}  // namespace xla

/*
#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xla::PrimitiveType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::PrimitiveType>() {
  return ::xla::PrimitiveType_descriptor();
}
template <> struct is_proto_enum< ::xla::PaddingValue> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::PaddingValue>() {
  return ::xla::PaddingValue_descriptor();
}
template <> struct is_proto_enum< ::xla::UnaryOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::UnaryOperation>() {
  return ::xla::UnaryOperation_descriptor();
}
template <> struct is_proto_enum< ::xla::BinaryOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::BinaryOperation>() {
  return ::xla::BinaryOperation_descriptor();
}
template <> struct is_proto_enum< ::xla::RandomDistribution> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::RandomDistribution>() {
  return ::xla::RandomDistribution_descriptor();
}
template <> struct is_proto_enum< ::xla::TernaryOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::TernaryOperation>() {
  return ::xla::TernaryOperation_descriptor();
}
template <> struct is_proto_enum< ::xla::VariadicOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xla::VariadicOperation>() {
  return ::xla::VariadicOperation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG
*/

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_xla_5fdata_2eproto__INCLUDED
